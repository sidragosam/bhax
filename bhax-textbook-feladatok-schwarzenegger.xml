<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Schwarzenegger!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Szoftmax Py MNIST</title>
        <para>
            Python
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/j7f9SkJR3oc">https://youtu.be/j7f9SkJR3oc</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0</link> (/tensorflow-0.9.0/tensorflow/examples/tutorials/mnist/), <link xlink:href="https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol">https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol</link>  
        </para>
        <para>
		Az MNIST egy adatbázis, melyben kézzel írott számjegyeket tárolunk. Leginkább ezt az adatbázist a képfelismerő programok tanítására használják. A programunk is ezen adatbázis alapján fogja felismerni a kézzel írott számjegyeinket.
        </para>
	<para>
		Elsősorban telepítenünk kell a TensorFlow-ot és a python-t, hogy el tudjuk kezdeni a feladatmegoldást.

	<programlisting language="python"><![CDATA[
import argparse

from tensorflow.examples.tutorials.mnist import input_data

import tensorflow as tf

import matplotlib.pyplot

FLAGS = None

def readimg():
    file = tf.read_file("sajat8a.png")
    img = tf.image.decode_png(file)
    return img

def main(_):
  mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)

  x = tf.placeholder(tf.float32, [None, 784])
  W = tf.Variable(tf.zeros([784, 10]))
  b = tf.Variable(tf.zeros([10]))
  y = tf.matmul(x, W) + b

  y_ = tf.placeholder(tf.float32, [None, 10])
  
  cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))
  train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)
  
  sess = tf.InteractiveSession()
  
  tf.initialize_all_variables().run()]]>
	</programlisting>
	<programlisting language="python"><![CDATA[
print("-- A halozat tanitasa")  
  for i in range(1000):
    batch_xs, batch_ys = mnist.train.next_batch(100)
    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})
    if i % 100 == 0:
      print(i/10, "%")
  print("----------------------------------------------------------")

  # Test trained model
  print("-- A halozat tesztelese")  
  correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))
  accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))  
  print("-- Pontossag: ", sess.run(accuracy, feed_dict={x: mnist.test.images,
                                      y_: mnist.test.labels}))
  print("----------------------------------------------------------")
  
  print("-- A MNIST 42. tesztkepenek felismerese, mutatom a szamot, a tovabblepeshez csukd be az ablakat")
  
  img = mnist.test.images[42]
  image = img

  matplotlib.pyplot.imshow(image.reshape(28, 28), cmap=matplotlib.pyplot.cm.binary)
  matplotlib.pyplot.savefig("4.png")  
  matplotlib.pyplot.show()

  classification = sess.run(tf.argmax(y, 1), feed_dict={x: [image]})

  print("-- Ezt a halozat ennek ismeri fel: ", classification[0])
  print("----------------------------------------------------------")

  print("-- A sajat kezi 8-asom felismerese, mutatom a szamot, a tovabblepeshez csukd be az ablakat")

  img = readimg()
  image = img.eval()
  image = image.reshape(28*28)

  matplotlib.pyplot.imshow(image.reshape(28, 28), cmap=matplotlib.pyplot.cm.binary)
  matplotlib.pyplot.savefig("8.png")  
  matplotlib.pyplot.show()

  classification = sess.run(tf.argmax(y, 1), feed_dict={x: [image]})

  print("-- Ezt a halozat ennek ismeri fel: ", classification[0])
  print("----------------------------------------------------------")

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.add_argument('--data_dir', type=str, default='/tmp/tensorflow/mnist/input_data',
                      help='Directory for storing input data')
  FLAGS = parser.parse_args()
  tf.app.run()]]>
	</programlisting>
	A programunk tehát egy 28x28-as képből képes felismerni a számjegyeket a Tensorflow segítségével.
	</para>
    </section>        

<!--
    <section>
        <title>Szoftmax R MNIST</title>
        <para>
            R            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->
    
    <section>
        <title>Mély MNIST</title>
        <para>
            Python            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
<!--
    <section>
        <title>Deep dream</title>
        <para>
            Keras            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->                  
    <section>
        <title>Minecraft-MALMÖ</title>
        <para>
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/bAPSu3Rndi8">https://youtu.be/bAPSu3Rndi8</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://github.com/Microsoft/malmo">https://github.com/Microsoft/malmo</link>      
        </para>
        <para>
	A Malmö az informatikában a mesterséges intelligenciával foglalkozik. A Malmö elérhető a https://github.com/Microsoft/malmo oldalon, ahol akár az első feladatban használt pip módszerrel is dolgozhatunk. A Minecraftban az x,y,z koordináták alapján nézhetjük meg Steve helyzetét és az őt körülvevő környezetet. Más más biomokban is létrehozhatjuk Steve-t. A program figyeli Steve irányát is, hogy merrefelé néz. A Minecraftban az irányok a következőképp néznek ki: 180 fok észak, 90 fok nyugat, 0 fok dél, -90 fok kelet. A program nézi a Stevet körülvevő blockokat, az alapján próbálja őt irányítani. Nándi okosan kitalálta, hogy több kockát nézve jobb eredményre juthatunk. A program lényege tulajdonképpen annyi, hogy a Minecraft-ban Steve szemével nézzük a világot. Itt kilistázzuk, hogy miket láthat Steve, és ha a cursor rajta van egy blockon akkor azt kiírjuk. Ha a block egy "AIR" azaz levegő block, vagyis egy üres kocka akkor Steve haladhat előre, viszont ha más akkor elkezd jobbra fordulni mindaddig míg egy Air-t nem talál. Ha érzi, hogy előtte egy block van egyel lejjebb akkor arra fel tud ugrani, valamint így a vízből is kimászik egy bizonyos határig. A programot annyival kiegészíteném, hogy a videóban is látszik, hogy a "TALLGRASS" block esetén is elfordul, viszont azt is nyugodtan lehetne úgy érzékelni, mint az "AIR"-t, vagyis szerintem azon is átmehetne nyugodtan Steve, hiszen ez nem akadály számára, mert nem rendelkezik collisionnel, a "TALLGRASS" block.

        </para>
    </section>        

</chapter>

